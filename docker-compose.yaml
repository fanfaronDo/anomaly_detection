version: '3.7'

services:
  postgres: 
    image: postgres:latest
    container_name: postgres
    volumes:
      - ./db/init/init.sql:/docker-entrypoint-initdb.d/init.sql 
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_SSL_MODE: disable
    networks:
      - transmitter_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s 
      retries: 5

  server_generator_freq:
    build: 
      context: .
      dockerfile:
        ./cmd/server/Dockerfile
    container_name: server_generator
    environment:
      SERVER_TRANSMITTER_HOST: 0.0.0.0
      SERVER_TRANSMITTER_PORT: 8000
    networks:
      - transmitter_network
    depends_on:
      - postgres

networks:
  transmitter_network:



  # transmitter:
  #   build:
  #     context: .
  #     dockerfile:
  #       ./cmd/client/Dockerfile
  #   container_name: transmitter
  #   environment:
  #     SERVER_TRANSMITTER_HOST: server_generator
  #     SERVER_TRANSMITTER_PORT: 8000
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_SCHEMA: anomaly
  #     DB_USER: ${POSTGRES_USER}
  #     DB_PASSWORD: ${POSTGRES_PASSWORD}
  #     DB_SSLMODE: disable
    
  #   depends_on:
  #     - postgres



      